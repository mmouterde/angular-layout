{"name":"Angular-layout","tagline":"Base html full-page layout directives inspired by Adobe Flex, using CSS flexbox","body":"Angular Layout\r\n==============\r\n\r\nAngular Layout is a collection of directives written in [angular][2], to\r\nsimplify building of full-page layouts. It is inspired by Apache Flex (formerly\r\nAdobe Flex) and Java Swing way of defining layout by means of declarative xml elements and\r\nrelated attributes.\r\n\r\nThis library, although very simple, is experimental and has not yet been tested\r\nextensively. Please provide feedback if you notice a bug or misbehavior, and,\r\nanyway, **use at your own peril.**\r\n\r\nInstallation\r\n------------\r\n\r\nThe easiest way to install Angular Layout is using [bower][1].\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nbower install --save angular-layout\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nUsage\r\n-----\r\n\r\nAdd the module `angular.layout` to your application dependencies, like so:\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nangular.module('myApp', ['angular.layout', ...])\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nDon't forget to refer angular-layout.js and angular-layout.css in your html\r\npages, like so:\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n<script src=\"angular-layout.js\"></script>\r\n<link rel=\"stylesheet\" href=\"angular-layout.css\"/>\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nYou may use minified resource versions respectively angular-layout.min.js and angular-layout.min.css.\r\nLook at the [demos][4] for some usage examples.\r\n\r\nOnce angular-layout module is loaded you can use following directives :\r\n\r\n###vbox / hbox\r\n\r\nAdded as attribute in a container such as div, body, td... These directives make the container a Flex container.\r\n* `hbox` to align child horizontally\r\n* `vbox` to align child vertically\r\n\r\n### container attributes\r\nOther attributes could be added to organize child fine :\r\n* `justify` could be set to `center`, `flex-end`, `flex-start` (default value), `space-around`, `space-between`.\r\n   As the justify in text document layout, this attribute defines where the child group should be placed if there is more space than needed.\r\n\r\n* `align` could be set to `baseline`, `center`, `flex-end`, `flex-start`, `stretch` (default value).\r\n This attribute define on which criteria child should be aligned each other.\r\n\r\n* `x-justify` could be set to `center`, `flex-end`, `flex-start` (default value).\r\nThis attribute defines where the child group should be placed if there is more space than needed ON THE CROSS AXIS (ie vertically for `hbox`, horizontally for `vbox`)\r\n\r\n* `wrap` could be set to `nowrap` (default value), `wrap`, `wrap-reverse`.\r\nThis attribute define the wrap policy.\r\n\r\nNote that you can use hbox and vbox as elements to\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n<vbox></vbox>\r\n<!-- is a short for (due to css default values)-->\r\n<div vbox justify=\"flex-start\" align=\"stretch\" x-justify=\"flex-start\" wrap=\"nowrap\"></div>\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n### child attributes\r\n\r\n* `grow` : the ability to take more place if possible. Valued with an integer, the value is use as a relative ability (big grow will grow quicker and more)\r\n* `shrink` : the ability to take less place if required. Valued with an integer, the value is use as a relative ability (big shrink will shrink quicker and more)\r\n* `order` : the index position among other child.\r\n\r\n### responsive extension\r\nAs well as bootstrap 3, the layout could be responsively defined with angular-layout.\r\nAngular-Layout provide four *extension* to its all directives (vbox, hbox, grow, shrink, order) : `*-xs`, `*-sm`, `*-md`, `*-lg`.\r\nJust add this extension to directives and restrict the directive to the associated media.\r\nUsed in conjonction with bootstrap `hidden-xs` or `visible-xs`... You can create responsive application easily.\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n<!-- So you can define a `vbox` that become a `hbox` on a small media by this way -->\r\n<vbox hbox-sm></vbox>\r\n\r\n<!-- or reorder an item as first element on extra small media : -->\r\n<div vbox order-xs=\"0\"></div>\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nHow it works\r\n------------\r\n\r\nAll the layouting is done via CSS, that is: no Javascript is involved in the\r\nlayouting, so it is super-fast and lightweight.\r\n\r\nNote that directives are here to help, but css would be enough.\r\nDirective do not always use CSS name. By experience, `align-items`, `align-content` and `justify` are very confusing !\r\nSo directive allows you to use (I hope) easy to understand name : `align`, `justify`, `x-justify` (x for cross axis).\r\nHowever, values for properties are the same.\r\n\r\nAngular Layout is built on top of Flexbox and aims to make it easier for angular developers to leverage\r\nits power and flexibility. Read more about Flexbox [here][5].\r\n\r\nBrowser support\r\n---------------\r\n\r\nThe main target of this library are mobile devices and modern browsers, old\r\nversions of IE are not taken into account at the current stage of development.\r\nCSS flex relative properties are supported on all recent browsers : [Check that !][7]\r\n\r\n\r\nv0.1.0 Breaking changes\r\n-----------------------\r\n- no more scroll\r\n- no more padding\r\n- attribute name changed to fit new spec ! (now : grow,shrink,align,justify,x-justify,vbox,hbox and responsible versions)\r\n- module name changed to `angular.layout` (ng is reserved by convention to official modules)\r\n\r\nRelease History\r\n==================\r\n * 2014-10-06       v0.1.0  upgrate to Angular 1.2.26, Flexbox [pre RC on 25 September 2014 spec][6]. no dependencies. refactoring. autoprefixed.\r\n * 2013-09-16       v0.0.2  remove underscore, meteor dependencies\r\n * 2013-09-15       v0.0.1  using Angular 1.1.5 Bootstrap 3, Flexbox 1999 spec\r\n\r\n[1]: <http://bower.io/>\r\n\r\n[2]: <http://angularjs.org/>\r\n\r\n[3]: <http://joshdmiller.github.io/ng-boilerplate>\r\n\r\n[4]: <https://github.com/demerzel3/angular-layout/tree/master/demos>\r\n\r\n[5]: <http://css-tricks.com/snippets/css/a-guide-to-flexbox/>\r\n\r\n[6]: <http://www.w3.org/TR/2014/WD-css-flexbox-1-20140925/>\r\n\r\n[7]: <http://caniuse.com/#feat=flexbox>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}